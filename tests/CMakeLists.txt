cmake_minimum_required(VERSION 2.8)

project(ESL_tests CXX)

set(BUILD_GTEST ON CACHE BOOL "Build gtest")
set(BUILD_GMOCK OFF CACHE BOOL "Build gmock")
add_subdirectory(googletest)

function(esl_has_cxx feat)
	if(DEFINED "esl_has_cxx_${feat}")
		return()
	endif()
	list(FIND CMAKE_CXX_COMPILE_FEATURES ${feat} has_feat)
	if(${has_feat} GREATER_EQUAL 0)
		set("esl_has_cxx_${feat}" TRUE PARENT_SCOPE)
	else()
		set("esl_has_cxx_${feat}" FALSE PARENT_SCOPE)
	endif()
endfunction()

function(esl_add_target target name)
    add_executable(${target} ${name}.cpp)
    target_link_libraries(${target} esl gtest gtest_main)
	set_property(TARGET ${target} PROPERTY CXX_EXTENSIONS OFF)
	add_test(NAME ${target} COMMAND ${target})
endfunction()
	
function(esl_add_test name)
	esl_add_target(${name} ${name})
	foreach(feat ${ARGN})
		esl_has_cxx(${feat})
		if(NOT ${esl_has_cxx_${feat}})
			continue()
		endif()
		esl_add_target("${name}-${feat}" ${name})
		target_compile_features("${name}-${feat}" PRIVATE ${feat})
	endforeach()
endfunction()

esl_add_test(type_traits_tests)
esl_add_test(typeinfo_tests)
esl_add_test(source_location_tests)
esl_add_test(span_tests)
esl_add_test(string_tests)

